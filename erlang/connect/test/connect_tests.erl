%% Based on canonical data version 1.1.0
%% https://github.com/exercism/problem-specifications/raw/master/exercises/connect/canonical-data.json
%% This file is automatically generated from the exercises canonical data.

-module(connect_tests).

-include_lib("erl_exercism/include/exercism.hrl").
-include_lib("eunit/include/eunit.hrl").




'1_an_empty_board_has_no_winner_test'() ->
    Input=[
        ". . . . .",
        " . . . . .",
        "  . . . . .",
        "   . . . . .",
        "    . . . . ."
    ],
    ?assertEqual(undefined, connect:winner(Input)).

'2_x_can_win_on_a_1x1_board_test'() ->
    Input=[
        "X"
    ],
    ?assertEqual(x, connect:winner(Input)).

'3_o_can_win_on_a_1x1_board_test'() ->
    Input=[
        "O"
    ],
    ?assertEqual(o, connect:winner(Input)).

'4_only_edges_does_not_make_a_winner_test'() ->
    Input=[
        "O O O X",
        " X . . X",
        "  X . . X",
        "   X O O O"
    ],
    ?assertEqual(undefined, connect:winner(Input)).

'5_illegal_diagonal_does_not_make_a_winner_test'() ->
    Input=[
        "X O . .",
        " O X X X",
        "  O X O .",
        "   . O X .",
        "    X X O O"
    ],
    ?assertEqual(undefined, connect:winner(Input)).

'6_nobody_wins_crossing_adjacent_angles_test'() ->
    Input=[
        "X . . .",
        " . X O .",
        "  O . X O",
        "   . O . X",
        "    . . O ."
    ],
    ?assertEqual(undefined, connect:winner(Input)).

'7_x_wins_crossing_from_left_to_right_test'() ->
    Input=[
        ". O . .",
        " O X X X",
        "  O X O .",
        "   X X O X",
        "    . O X ."
    ],
    ?assertEqual(x, connect:winner(Input)).

'8_o_wins_crossing_from_top_to_bottom_test'() ->
    Input=[
        ". O . .",
        " O X X X",
        "  O O O .",
        "   X X O X",
        "    . O X ."
    ],
    ?assertEqual(o, connect:winner(Input)).

'9_x_wins_using_a_convoluted_path_test'() ->
    Input=[
        ". X X . .",
        " X . X . X",
        "  . X . X .",
        "   . X X . .",
        "    O O O O O"
    ],
    ?assertEqual(x, connect:winner(Input)).

'10_x_wins_using_a_spiral_path_test'() ->
    Input=[
        "O X X X X X X X X",
        " O X O O O O O O O",
        "  O X O X X X X X O",
        "   O X O X O O O X O",
        "    O X O X X X O X O",
        "     O X O O O X O X O",
        "      O X X X X X O X O",
        "       O O O O O O O X O",
        "        X X X X X X X X O"
    ],
    ?assertEqual(x, connect:winner(Input)).
